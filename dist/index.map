{"version":3,"sources":["config/elements.ts","helpers/array.ts","helpers/cells.ts","helpers/numbers.ts","index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export default [\n  {\n    name: \"blank\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // space\n    value: \" \",\n  },\n  {\n    name: \"downAndRight\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // ╰\n    value: \"\\u2570\",\n  },\n  {\n    name: \"horizontal\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"blank\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ─\n    value: \"\\u2500\",\n  },\n  {\n    name: \"node\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"node\"],\n        cellToTheLeft: [\"node\"],\n      },\n    },\n    // ●\n    value: \"\\u25CF\",\n  },\n  {\n    name: \"rightAndDown\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ╮\n    value: \"\\u256E\",\n  },\n  {\n    name: \"rightAndUp\",\n    rules:   {\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ╯\n    value: \"\\u256F\",\n  },\n  {\n    name: \"upAndRight\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // ╭\n    value: \"\\u256D\",\n  },\n  {\n    name: \"vertical\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // │\n    value: \"\\u2502\",\n  },\n];\n","export const randomValue = (arr) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n","export const cellToTheLeft = (currentGrid, elementRow, elementColumn) => {\n  return currentGrid[elementRow][elementColumn - 1];\n};\n\nexport const cellAbove = (currentGrid, elementRow, elementColumn) => {\n  if (!currentGrid[elementRow - 1]) { return; }\n  return currentGrid[elementRow - 1][elementColumn];\n};\n","export const takeAChance = (likelihood) => {\n  return Math.random() <= likelihood;\n};\n","import elementsConfig from \"./config/elements\";\nimport { randomValue } from \"./helpers/array\";\nimport { cellAbove, cellToTheLeft } from \"./helpers/cells\";\nimport { takeAChance } from \"./helpers/numbers\";\n\nconst defaultOptions = {\n  blank: { chance: 1 },\n  columns: 30,\n  downAndRight: { chance: 1 },\n  horizontal: { chance: 1 },\n  node: { chance: 1 },\n  rightAndDown: { chance: 1 },\n  rightAndUp: { chance: 1 },\n  rows: 5,\n  upAndRight: { chance: 1 },\n  vertical: { chance: 1 },\n};\n\nconst characterBySymbol = (characterSymbol) => {\n  return elementsConfig.find((element) => characterSymbol === element.value);\n};\n\nconst applyElementRules = (element, aboveName, leftName, options) => {\n  const { name, rules } = element;\n\n  if (rules.validUnless.cellAbove.indexOf(aboveName) > -1) { return false; }\n  if (rules.validUnless.cellToTheLeft.indexOf(leftName) > -1) { return false; }\n  if (!takeAChance(options[name].chance)) { return false; }\n\n  return true;\n};\n\nconst allowedCharacters = (charAbove, charLeft, options) => {\n  const aboveDefinition = characterBySymbol(charAbove);\n  const leftDefinition = characterBySymbol(charLeft);\n\n  let aboveName = \"\";\n  let leftName = \"\";\n\n  if (aboveDefinition) { aboveName = aboveDefinition.name; }\n  if (leftDefinition) { leftName = leftDefinition.name; }\n\n  return elementsConfig.filter(\n    (element) => applyElementRules(element, aboveName, leftName, options),\n  );\n};\n\nexport const generate = (options = {}) => {\n  const output = [];\n  const mergedOptions = Object.assign({}, defaultOptions, options);\n\n  for (let row = 0; row < mergedOptions.rows; row++) {\n    if (!output[row]) { output.push([]); }\n\n    for (let column = 0; column < mergedOptions.columns; column++) {\n      if (!output[row][column]) { output[row].push([]); }\n      const above = cellAbove(output, row, column);\n      const left = cellToTheLeft(output, row, column);\n      const characterForCell = randomValue(\n        allowedCharacters(above, left, mergedOptions),\n      );\n      output[row][column] = characterForCell ? characterForCell.value : \" \";\n    }\n  }\n\n  let outputString = \"\";\n\n  for (const row of output) {\n    outputString += row.join(\"\") + \"\\n\";\n  }\n\n  return outputString;\n};\n"]}
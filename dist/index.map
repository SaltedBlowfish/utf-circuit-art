{"version":3,"sources":["config/elements.ts","helpers/array.ts","helpers/cells.ts","helpers/numbers.ts","index.ts"],"names":[],"mappings":";;;;AAAA,QAAA,OAAA,GAAe,CACb;AACE,UAAM,OADR;AAEE,ACHS,QAAA,GDGF,QCHE,GAAc,UAAC,GAAD,EAAQ;ADI7B,ACHJ,WAAO,IAAI,KAAK,CDGC,ICHN,CAAW,KAAK,MAAL,KAAgB,IAAI,MAA/B,CAAJ,CAAP;ADIM,ACHP,ACFY,CDAA,OCAA,aAAA,EFKM,CAAC,AELS,UFKV,AELW,EFKE,SELH,EAAc,GFKxB,EAA6B,KELnB,EAA0B,KFKpC,CADA,OEJU,EAA2C;AFMhE,AELN,WAAO,YAAY,IFKE,CAAC,KELf,EAAwB,KFKV,EAAe,SELW,CAAxC,CAAP,GFKqB,EAA+B,YAA/B;AAFJ,AEFlB,ACFY,CDAA,OCAA,WAAA,GAAc,UAAC,UAAD,EAAe;AHG/B,AECE,ACHX,KHAA,GEGW,GCHJ,KAAK,CDGD,GAAY,ECHhB,MAAiB,EDGA,QCHxB,GDGuB,EAAc,UAAd,EAA0B,aAA1B,EAA2C;AFKhE,AEJF,ACHD,CAFY,ODKP,CAAC,YAAY,aAAa,CAAzB,CAAL,EAAkC;AFKhC,AELkC,WFK3B;AATT,AEI6C,CFLhC,EAYb;AACE,AEPF,AENF,IAAA,MJaU,CEPD,MENT,MFMqB,CFMnB,SIZF,GFMkC,CAAzB,EAA4B,EENrC,WFMS,CAAP,OENF,CAAA,CAAA;AJcI,AEPH,AEND,CFGa,GEHb,OJaW,GIbX,QAAA,iBAAA,CAAA;AJcM,AIbN,IAAA,UAAA,EJac,GADH,GIZX,iBAAA,CAAA;AJcM,AIbN,IAAA,YAAA,KJamB,GIbnB,mBAAA,CAAA;AJcQ,AIZR,IAAM,mBJYa,CAAC,AIZM,OJYP,EAAU,AIZvB,YJYa,EAAwB,GIZjB,CAAC,UJYR,EAAwC,GIZjC,EAAoB,OJY3B,CADA;AAEX,AIZN,WAAO,WAAA,KJYc,CAAC,CIZf,CAAe,IAAf,CAAoB,KJYN,EAAe,GIZR,OAAD,IJYN,EAA+B,YAA/B;AAFJ,AIVU,eAAa,oBAAoB,QAAQ,KAAzC;AJQlB,AIRkB,KJM3B,AINO,CAAP;AJeE,AIdH,CAFD;AJiBI,AIbJ,IAAM,OJaK,aIbe,SAApB,iBAAoB,CAAC,OAAD,EAAU,SAAV,EAAqB,QAArB,EAAiC;AJGzD,AIHyD,CJT5C,EAwBb,KIdQ,KADiD,GACvC,OADuC,CACjD,KADiD;AJgBvD,UAAM,YADR;AAEE,AIdF,QAAI,GJcK,GIdC,WAAN,CAAkB,SAAlB,CAA4B,OAA5B,CAAoC,SAApC,IAAiD,CAAC,CAAtD,EAAyD;AJerD,AIfuD,eAAO,KAAP,CJe1C;AACX,AIhBoE,uBJgBzD,CAAC,UAAD,EAAa,cAAb,EAA6B,YAA7B,CADA;AAEX,AIhBN,QAAI,MAAM,WAAN,CAAkB,CJgBD,CAAC,OAAD,EAAU,EIhB3B,CAAgC,OJgBf,AIhBjB,CAAwC,CJgBD,OAAtB,AIhBjB,EJgBgD,EIhBI,CAAC,CAAzD,EAA4D,QJgBvC,EAA+C,YAA/C;AAFJ,AId6C,eAAO,KAAP;AJarD,AIboE,KJW7E;AAQE,AIlBF,QAAI,CAAC,MAAM,MAAM,MAAZ,CAAD,IAAwB,CAAC,UAAA,WAAA,CAAY,MAAM,MAAlB,CAA7B,EAAwD;AJmBtD,AInBwD,WJmBjD,IInBwD,KAAP;AJU1D,AIVyE,CJd5D,EAmCb;AACE,AIpBF,UJoBQ,CIpBD,IAAP,CJmBA;AAEE,AIpBH,CARD,UJ4BW;AACL,AInBN,IAAM,YJmBQ,GADH,KIlBe,SAApB,iBAAoB,CAAC,SAAD,EAAY,QAAZ,EAAwB;AJoB5C,AInBJ,QAAM,aJmBW,KInBO,kBAAkB,SAAlB,CAAxB;AJoBM,AInBN,QAAM,eJmBW,CAAC,CInBK,KJmBN,CADA,YIlBwB,QAAlB,CAAvB;AJoBM,AIlBN,QAAI,YAAY,EAAhB,KJkBqB,CAAC,MAAD;AAFJ,AIfjB,QAAI,WAAW,EAAf;AJaS,AIXT,KJSA,GITI,eAAJ,EAAqB;AJkBnB,AIlBqB,oBAAY,gBAAgB,IAA5B;AJmBrB,AInBwD,WJmBjD;AAVT,AIRA,CJ3Ba,EA+Cb,KIpBI,cAAJ,EAAoB;AJqBlB,AIrBoB,UJqBd,SIrByB,KJoBjC,UIpBgD,IAA1B;AJsBpB,AItBqD,WJsB9C;AACL,AIrBJ,WAAO,KJqBK,GADH,GIpBF,OAAA,CAAe,MAAf,CACL,UAAC,OAAD;AJqBE,AIrBF,eAAa,MJqBE,YIrBgB,OAAlB,EAA2B,SAA3B,EAAsC,QAAtC,CAAb;AJsBI,AItBJ,KADK,CAAP,iBJuBiB,CAAC,UAAD,EAAa,cAAb,EAA6B,YAA7B,CADA;AAEX,AIrBP,CAbD,0BJkCuB,CAAC,OAAD,EAAU,UAAV,EAAsB,cAAtB,EAAsC,YAAtC;AAFJ,AIjBN,QAAA,QAAA,GAAW,YAA2B;AJexC,AIfwC,KJajD,GIbuB,IAA0B,uEAAnB,CAAmB;AJsB/C,AItB+C,QAAhB,OAAgB,uEAAN,EAAM;AJuB/C,WAAO;AAVT,AIZA,CJnCa,EA2Db,KIxBM,SAAS,EAAf;AJyBE,AIvBF,SAAK,CJuBG,GIvBC,MAAM,CAAf,EJsBA,AItBkB,MAAM,IAAxB,EAA8B,KAA9B,EAAqC;AJwBnC,AIvBA,WJuBS,CIvBL,CAAC,OAAO,GAAP,CAAL,EAAkB;AJwBhB,AIxBkB,gBJwBV,GADD,AIvBkB,IAAP,CAAY,EAAZ;AJyBlB,AIzBoC,qBJyBvB;AACX,AIxBJ,aAAK,IAAI,MJwBM,CAAC,EIxBE,CAAlB,EAAqB,EJwBN,EAAU,KIxBK,OJwBf,AIxBf,EJwBuC,AIxBA,QAAvC,EAAiD,IJwBlC,EAAwC,YAAxC,CADA;AAEX,AIxBF,gBAAI,CAAC,OAAO,GJwBK,AIxBZ,CJwBa,CIxBD,MJwBA,AIxBZ,CAAL,CJwB2B,CIxBD,SJwBT,EAAsB,cAAtB,EAAsC,YAAtC;AAFJ,AItBe,uBAAO,GAAP,EAAY,IAAZ,CAAiB,EAAjB;AJoBrB,AIpB4C,KJkBvD;AASE,AI1BE,gBAAM,QAAQ,QAAA,SAAA,CAAU,MAAV,EAAkB,GAAlB,EAAuB,MAAvB,CAAd;AJ2BF,AI1BE,WJ0BK,KI1BC,OAAO,QAAA,aAAA,CAAc,MAAd,EAAsB,GAAtB,EAA2B,MAA3B,CAAb;AJgBJ,AIfI,CJ5CS,EAuEb,aI3BU,mBAAmB,QAAA,WAAA,CAAY,kBAAkB,KAAlB,EAAyB,IAAzB,CAAZ,CAAzB;AJ4BF,AI3BE,UJ2BI,SI3BG,GJ0BX,AI1BI,EAAY,MAAZ,IAAsB,mBAAmB,iBAAiB,KAApC,GAA4C,GAAlE;AJ4BF,AI3BC,WJ2BM;AACL,AI3BH,gBJ2BW,GADH;AAEL,AI1BJ,QAAI,aJ0Ba,EI1BE,EAAnB;AJ2BM,AI1C2C,uBJ0ChC,CAAC,UAAD,EAAa,cAAb,EAA6B,YAA7B,CADA;AAEX,AI3C2C,2BJ2C5B,CAAC,YAAD,EAAe,cAAf,EAA+B,YAA/B;AAFJ,AIzCgC;AJuCxC,KAFT;AASE,AI9C+C;AJ+C/C,AI9BF,WJ8BS,kBI9BS,MAAlB,8HAA0B;AJoB1B,AIpB0B,CJnDb,EAmFb,aIhCW,IAAe;AJiCxB,UAAM,UADR;AAEE,AIjCA,WJiCO,iBIjCS,KAAI,IAAJ,CAAS,EAAT,IAAe,IAA/B;AJkCE,AIjCH,gBJiCW,GADH;AAEL,AIrD6C,qBJqDhC;AACX,AItD2C,uBJsDhC,CAAC,OAAD,EAAU,YAAV,EAAwB,cAAxB,EAAwC,YAAxC,CADA;AAEX,AIvD2C,2BJuD5B,CAAC,YAAD,EAAe,cAAf,EAA+B,YAA/B;AAFJ,AIrDgC;AJmDxC,AInDwC,KJiDjD;AASE,AI1D+C;AJ2D/C,AI3D+C,WJ2DxC;AAVT,AIjDiD,CJlCpC,CAAf;AIkCmD;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBjD,WAAO,YAAP;AACD,CAtBY","file":"index.map","sourceRoot":"../src","sourcesContent":["export default [\n  {\n    name: \"blank\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // space\n    value: \" \",\n  },\n  {\n    name: \"downAndRight\",\n    rules: {\n      chance: 0.1,\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // ╰\n    value: \"\\u2570\",\n  },\n  {\n    name: \"horizontal\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"blank\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ─\n    value: \"\\u2500\",\n  },\n  {\n    name: \"node\",\n    rules: {\n      chance: 0.2,\n      validUnless: {\n        cellAbove: [\"node\"],\n        cellToTheLeft: [\"node\"],\n      },\n    },\n    // ●\n    value: \"\\u25CF\",\n  },\n  {\n    name: \"rightAndDown\",\n    rules: {\n      chance: 0.1,\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ╮\n    value: \"\\u256E\",\n  },\n  {\n    name: \"rightAndUp\",\n    rules:   {\n      chance: 0.1,\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ╯\n    value: \"\\u256F\",\n  },\n  {\n    name: \"upAndRight\",\n    rules: {\n      chance: 0.1,\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // ╭\n    value: \"\\u256D\",\n  },\n  {\n    name: \"vertical\",\n    rules: {\n      chance: 0.1,\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // │\n    value: \"\\u2502\",\n  },\n];\n","export const randomValue = (arr) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n","export const cellToTheLeft = (currentGrid, elementRow, elementColumn) => {\n  return currentGrid[elementRow][elementColumn - 1];\n};\n\nexport const cellAbove = (currentGrid, elementRow, elementColumn) => {\n  if (!currentGrid[elementRow - 1]) { return; }\n  return currentGrid[elementRow - 1][elementColumn];\n};\n","export const takeAChance = (likelihood) => {\n  return Math.random() <= likelihood;\n};\n","import elementsConfig from \"./config/elements\";\nimport { randomValue } from \"./helpers/array\";\nimport { cellAbove, cellToTheLeft } from \"./helpers/cells\";\nimport { takeAChance } from \"./helpers/numbers\";\n\nconst characterBySymbol = (characterSymbol) => {\n  return elementsConfig.find((element) => characterSymbol === element.value);\n};\n\nconst applyElementRules = (element, aboveName, leftName) => {\n  const { rules } = element;\n\n  if (rules.validUnless.cellAbove.indexOf(aboveName) > -1) { return false; }\n  if (rules.validUnless.cellToTheLeft.indexOf(leftName) > -1) { return false; }\n  if (!isNaN(rules.chance) && !takeAChance(rules.chance)) { return false; }\n\n  return true;\n};\n\nconst allowedCharacters = (charAbove, charLeft) => {\n  const aboveDefinition = characterBySymbol(charAbove);\n  const leftDefinition = characterBySymbol(charLeft);\n\n  let aboveName = \"\";\n  let leftName = \"\";\n\n  if (aboveDefinition) { aboveName = aboveDefinition.name; }\n  if (leftDefinition) { leftName = leftDefinition.name; }\n\n  return elementsConfig.filter(\n    (element) => applyElementRules(element, aboveName, leftName),\n  );\n};\n\nexport const generate = (rows = 5, columns = 30) => {\n  const output = [];\n\n  for (let row = 0; row < rows; row++) {\n    if (!output[row]) { output.push([]); }\n\n    for (let column = 0; column < columns; column++) {\n      if (!output[row][column]) { output[row].push([]); }\n      const above = cellAbove(output, row, column);\n      const left = cellToTheLeft(output, row, column);\n      const characterForCell = randomValue(allowedCharacters(above, left));\n      output[row][column] = characterForCell ? characterForCell.value : \" \";\n    }\n  }\n\n  let outputString = \"\";\n\n  for (const row of output) {\n    outputString += row.join(\"\") + \"\\n\";\n  }\n\n  return outputString;\n};\n"]}
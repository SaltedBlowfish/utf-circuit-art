{"version":3,"sources":["config/elements.ts","helpers/array.ts","index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export default [\n  {\n    edges: [],\n    name: \"blank\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // space\n    value: \" \",\n  },\n  {\n    edges: [\"top\", \"right\"],\n    name: \"downAndRight\",\n    rules: {\n      density: 0.1,\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // ╰\n    value: \"\\u2570\",\n  },\n  {\n    edges: [\"left\", \"right\"],\n    name: \"horizontal\",\n    rules: {\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"blank\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ─\n    value: \"\\u2500\",\n  },\n  {\n    edges: [],\n    name: \"node\",\n    rules: {\n      density: 0.2,\n      validUnless: {\n        cellAbove: [\"node\"],\n        cellToTheLeft: [\"node\"],\n      },\n    },\n    // ●\n    value: \"\\u25CF\",\n  },\n  {\n    edges: [\"left\", \"bottom\"],\n    name: \"rightAndDown\",\n    rules: {\n      density: 0.1,\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ╮\n    value: \"\\u256E\",\n  },\n  {\n    edges: [\"left\", \"top\"],\n    name: \"rightAndUp\",\n    rules:   {\n      density: 0.1,\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"blank\", \"vertical\", \"rightAndDown\", \"rightAndUp\"],\n      },\n    },\n    // ╯\n    value: \"\\u256F\",\n  },\n  {\n    edges: [\"bottom\", \"right\"],\n    name: \"upAndRight\",\n    rules: {\n      density: 0.1,\n      validUnless: {\n        cellAbove: [\"vertical\", \"rightAndDown\", \"upAndRight\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // ╭\n    value: \"\\u256D\",\n  },\n  {\n    edges: [\"top\", \"bottom\"],\n    name: \"vertical\",\n    rules: {\n      density: 0.1,\n      validUnless: {\n        cellAbove: [\"blank\", \"horizontal\", \"downAndRight\", \"rightAndUp\"],\n        cellToTheLeft: [\"horizontal\", \"downAndRight\", \"upAndRight\"],\n      },\n    },\n    // │\n    value: \"\\u2502\",\n  },\n];\n","export const randomValue = (arr) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n","import elementsConfig from \"./config/elements\";\nimport { randomValue } from \"./helpers/array\";\n\nexport const cellToTheLeft = (currentGrid, elementRow, elementColumn) => {\n  return currentGrid[elementRow][elementColumn - 1];\n};\n\nexport const cellAbove = (currentGrid, elementRow, elementColumn) => {\n  if (!currentGrid[elementRow - 1]) { return; }\n  return currentGrid[elementRow - 1][elementColumn];\n};\n\nexport const characterBySymbol = (characterSymbol) => {\n  return elementsConfig.find((element) => characterSymbol === element.value);\n};\n\nexport const allowedCharacters = (charAbove, charLeft) => {\n  const aboveDefinition = characterBySymbol(charAbove);\n  const leftDefinition = characterBySymbol(charLeft);\n\n  let aboveName;\n  let leftName;\n\n  if (!aboveDefinition) {\n    aboveName = \"\";\n  } else {\n    aboveName = aboveDefinition.name;\n  }\n  if (!leftDefinition) {\n    leftName = \"\";\n  } else {\n    leftName = leftDefinition.name;\n  }\n\n  return elementsConfig.filter(\n    (element) => {\n      if (element.rules.validUnless.cellAbove.indexOf(aboveName) > -1) {\n        return false;\n      }\n      if (element.rules.validUnless.cellToTheLeft.indexOf(leftName) > -1) {\n        return false;\n      }\n      if (\n        element.rules.density !== undefined &&\n        Math.random() >= element.rules.density\n      ) {\n        return false;\n      }\n      return true;\n    },\n  );\n};\n\nexport const generate = (rows = 5, columns = 30) => {\n  const output = [];\n\n  for (let row = 0; row < rows; row++) {\n    if (!output[row]) { output.push([]); }\n\n    for (let column = 0; column < columns; column++) {\n      if (!output[row][column]) { output[row].push([]); }\n      const above = cellAbove(output, row, column);\n      const left = cellToTheLeft(output, row, column);\n      const characterForCell = randomValue(allowedCharacters(above, left));\n      output[row][column] = characterForCell ? characterForCell.value : \" \";\n    }\n  }\n\n  let outputString = \"\";\n\n  for (const row of output) {\n    outputString += row.join(\"\") + \"\\n\";\n  }\n\n  return outputString;\n};\n"]}